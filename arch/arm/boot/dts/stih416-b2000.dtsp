/*
 * Copyright (C) 2012 STMicroelectronics Limited.
 * Author: Srinivas Kandagatla <srinivas.kandagatla@st.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * publishhed by the Free Software Foundation.
 */
/dts-v1/;
#include "stih416.dtsi"
#include "nand/samsung_k9f2g08u0c.dtsi"

/ {
	model = "Stih416 Orly B2000";
	compatible = "st,stih416", "st,stih416-b2000";
	#address-cells = <1>;
	#size-cells = <1>;

	memory{
                device_type = "memory";
		reg = <0x60000000 0x40000000>;
	};

	chosen {
		bootargs = "                                                                                                                                                                                                                                                                                                                                                                                                                 ";
		linux,stdout-path = &uart2;
	};

        aliases {
                ttyAS0 = &uart2;
		i2c0 = &i2c1;
		i2c1 = &i2c3;
		i2c2 = &sbc_i2c0;
		usb0 = &usb0;
		usb1 = &usb1;
		usb2 = &usb2;
		usb3 = &usb3;
		mmc0 = &sdhci0;
        };

	soc {

		nandafm: nand-afm{
			 /* Most of the properities inherited from stih415.dtsi */
			status = "okay";
			st,rbn-flex-connected;
			st,nand-banks = <&nand_banks>;
		};

		nand_banks: nand-banks {
			/*
			 * NAND Flash via b2006/b2007 VPMEM module.
			 * Configuration below assumes module is fitted
			 * with Samsung K9F2G08U0C device:
			 *   - Size = 2Gib(256MiB), Page = 2048+64, Block = 128MiB
			 *   - ECC = 1-bit/526B min
			 * Please update configuration if module is populated
			 * with a different device.
			 */
			bank0 {
				nand-on-flash-bbt;
				nand-no-autoincr;
				st,nand-csn		= <0>;
				st,nand-timing-spec	= <&samsung_k9f2g08u0c_tspec>;
				st,nand-timing-relax	= <0>;
				partitions {
					#address-cells = <1>;
			                #size-cells = <1>;
					partition@0{
						label = "NAND Flash 1";
						reg = <0x00000000 0x00800000>;
					};
					partition@800000{
						label = "NAND Flash 2";
						reg = <0x00800000 0x0f800000>;
					};
				};
			};
		};

		spifsm:	spifsm@fe902000{
			status		= "okay";
			flash-name	= "n25q128";
			partitions	= <&b2000_fsm_partitions>;
			b2000_fsm_partitions: partitions-b2000 {
		                #address-cells = <1>;
			        #size-cells = <1>;
				partition@0 {
					label = "Serial Flash 1";
					reg = <0x00000000 0x00500000>;
				};
				partition@500000{
					label = "Serial Flash 2";
					reg = <0x00500000 0x00b00000>;
				};
			};
		};
		/* USB's */

		usb0: usb@fe100000{
			status = "okay";
		};

		usb1: usb@fe200000{
			status = "okay";
		};

		usb2: usb@fe300000{
			status = "okay";
		};

		usb3: usb@fe340000{
			status = "okay";
		};

		/* SBC PWM */
		pwm1: pwm@fe510000{
			status = "okay";
			out {
				out-channel@0 {
					status = "okay";
				};
			};
		};

		leds {
			compatible	= "gpio-leds";
			fp_led {
				label	= "Front Panel LED";
				gpios	= <&PIO105 7 0>;
				linux,default-trigger	= "heartbeat";
			};
		};

		/**
		* By default IRB is configured to be in IR-RX mode.
		* To configure to UHF mode, Please add these two properties
		* to lirc node here, this will overide default ir configuration.
		*
		* For UHF mode, Please add these two properties
		*	device-config = <&lirc_uhf_device_config>;
		*	rx-uhfmode;
		*
		* For UHF-RX and TX mode, Please add these two properties
		*	device-config = <&lirc_uhf_tx_device_config>;
		*	rx-uhfmode;
		*
		* For IR-RX and TX mode, Please add these two properties
		*	device-config = <&lirc_ir_tx_device_config>;
		*	tx-enabled;
		*/

		lirc: lirc@fe518000 {
			status = "okay";
		};


		/* HDMI */
		i2c1: i2c@fed41000{
			status = "okay";
		};

		/* Frontend I2C, make sure J17-J20 are configured accordingly */
		i2c3: i2c@fed43000{
			status = "okay";
		};

		/* Backend I2C, make sure J50, J51 are configured accordingly */
		/* SBC SSC0 */
		sbc_i2c0: i2c@fe540000{
			status = "okay";
		};

		uart2: uart@fed32000{
			status = "okay";
		};

		/* If B2048 has EMMC then set st,mmc-non-removable property */
		sdhci0:sdhci@fe81e000 {
			status = "okay";
			/* st,mmc-non-removable;  for eMMC on boards */
		};
	/*

	For each ethernet daughter board, change below properties in ethernet node respectively.
	____________________________________________________________________________________________
	|Ethernet Board and PHY Mode |	 phy-mode	| snps,phy-addr	| device-config(change 0 to|
	|			     |	 (value)	|    (value)	| 1 for gmac1)             |
	|____________________________|__________________|_______________|__________________________|
	| B2032 in mii Mode	     |	"mii"		|    <0x1>	|&mii0_ext_clk_dev_config  |
	|____________________________|__________________|_______________|__________________________|
	| B2032 in GBit mode	     |	"gmii"		|    <0x1>	|&gmii0_ext_clk_dev_config |
	|____________________________|__________________|_______________|__________________________|
	| B2032 in RGMII mode	     |	"rgmii-id"	|    <0x1>	|&rgmii0_ext_clk_dev_config|
	|____________________________|__________________|_______________|__________________________|
	|____________________________|__________________|_______________|__________________________|
	| B2035 in RMII mode	     |	"rmii"		|    <0x9>	|&rmii0_dev_config         |
	|____________________________|__________________|_______________|__________________________|

	Example:
	For B2032: in MII Mode:
			phy-mode	= "mii";
			snps,phy-addr = <0x1>;
			device-config = <&mii0_ext_clk_dev_config>;

	Also update the status property for enabling appropriate ethernet.
	*/

		ethernet0:ethernet@fe810000 {
			status = "okay";
			phy-mode	= "mii";
			snps,phy-bus-name = "stmmac";
			snps,phy-bus-id = <0>;
			snps,phy-addr = <0x1>;
			device-config = <&mii0_ext_clk_dev_config>;

			snps,reset-gpio = <&PIO106 2 0>;
			//snps,reset-gpio = <&PIO105 6>;
			snps,reset-active-low;
			snps,reset-delays-us = <0 10000 10000>;
		};

		ethernet1:ethernet@fef08000 {
			status = "okay";
			phy-mode	= "gmii";
			snps,phy-bus-name = "stmmac";
			snps,phy-bus-id = <1>;
			snps,phy-addr = <0x1>;
			device-config = <&gmii1_ext_clk_dev_config>;

			snps,reset-gpio = <&PIO4 7 0>;
			snps,reset-active-low;
			snps,reset-delays-us = <0 10000 10000>;
		};

		snd_uni_player0: snd-uni-player@0xfe002000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
		};

		snd_uni_player1: snd-uni-player@0xfe003000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
			/* Pads clash: i2c3, snd_uni_reader1, ... */
			padcfg-names	= "default";
			padcfg-0	= <>;
		};

		snd_uni_player2: snd-uni-player@0xfe004000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
		};

		snd_uni_player3: snd-uni-player@0xfe006000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
			/* Pads clash: pwm0, ... */
			padcfg-names	= "default";
			padcfg-0	= <&padcfg_b2002_spdif_out>;
		};

		snd_uni_reader0: snd-uni-reader@0xfe005000 {
			compatible	= "st,snd_uni_reader";
			status		= "disabled";
			/* Pads clash: i2c3, snd_uni_player1, ... */
			padcfg-names	= "default";
			padcfg-0	= <&padcfg_b2011_spdif_in>;
		};

		snd_uni_reader1: snd-uni-reader@0xfe007000 {
			compatible	= "st,snd_uni_reader";
			status		= "okay";
		};

		snd_conv_dac_sc: snd-conv-dac-sc {
			compatible	= "st,snd_conv_dac_sc";
			status		= "okay";
		};

		snd_conv_biphase: snd-conv-biphase {
			compatible	= "st,snd_conv_biphase";
			status		= "okay";
		};

		snd_audio_glue: snd-audio-glue {
			compatible	= "st,snd_audio_glue";
			status		= "okay";
		};

		keyscan: keyscan@fe4b0000 {
			compatible = "st,stm-keyscan";
			st,keyscan-num-rows = <4>;
			st,keyscan-num-columns = <4>;
			st,debounce_us = <5000>;
			linux,keymap = < /* in0    in1     in2   in3  */
				183 67 63 59			/* out0 */
				184 68 64 60			/* out1 */
				185 87 65 61			/* out2 */
				186 88 66 62 >;			/* out3 */
		};
	};
};
