/*
 * Copyright (C) 2013 STMicroelectronics Limited.
 * Author: Giuseppe Cavallaro <peppe.cavallaro@st.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * publishhed by the Free Software Foundation.
 */
/dts-v1/;
#include "stih416.dtsi"

/ {
	model = "Stih416 B2105";
	compatible = "st,stih416-b2105", "st,stih416";
	#address-cells = <1>;
	#size-cells = <1>;

	memory{ /* set from start up targetpack */
		device_type = "memory";
		reg = <0x40000000 0x80000000>;
	};

	chosen {
		bootargs = "                                                                                                                                                                                                                                                                                                                                                                                                         ";
		linux,stdout-path = &uart2;
	};

	aliases {
		ttyAS0 = &uart2;
		i2c0 = &i2c0;
		i2c1 = &i2c1;
		i2c2 = &sbc_i2c0;
		i2c3 = &sbc_i2c1;

		usb0 = &usb0;
		usb1 = &usb1;
		mmc0 = &sdhci0;
	};
	soc {
		power-on-gpio   = <&PIO4 3 0>;

		nandbch: nand-bch{
			/* Most of the properities inherited from stih415.dtsi */
			st,rbn-flex-connected;
			status = "okay";
			st,nand-banks = <&nand_banks>;
		};

		nand_banks: nand-banks {
			bank0 {
				/* NAND_BBT_USE_FLASH (4Gbit) */
				nand-on-flash-bbt;
				nand-no-autoincr;
				st,nand-csn		= <0>;
				st,nand-timing-data	= <&nand_timing0>;
				partitions {
					#address-cells = <1>;
					#size-cells = <1>;
					partition@0{
						label = "NAND Flash 1";
						reg = <0x00000000 0x01000000>;
					};
					partition@1000000{
						label = "NAND Flash 2";
						reg = <0x01000000 0x01000000>;
					};
					partition@2000000{
						label = "NAND Flash 3";
						reg = <0x02000000 0x1e000000>;
					};
				};
			};
		};

		nand_timing0: nand-timing {
			sig-setup	= <10>;
			sig-hold	= <10>;
			CE-deassert	= <0>;
			WE-to-RBn	= <100>;
			wr-on		= <10>;
			wr-off		= <30>;
			rd-on		= <10>;
			rd-off		= <30>;
			chip-delay	= <30>;		/* delay in us */
		};

		spifsm:	spifsm@fe902000{
			status		= "okay";
			flash-name	= "n25q256";
			partitions	= <&b2105_fsm_partitions>;

			b2105_fsm_partitions: partitions-b2105 {
				#address-cells = <1>;
				#size-cells = <1>;
				partition@0 {
					label = "Serial Flash 1";
					reg = <0x00000000 0x00500000>;
				};
				partition@500000{
					label = "Serial Flash 2";
					reg = <0x00500000 0x02000000>;
				};
			};
		};

		/* USB's */

		usb0: usb@fe100000{
			status = "okay";
		};

		usb1: usb@fe200000{
			status = "okay";
		};

		leds {
			compatible	= "gpio-leds";
			red {
				label	= "Front Panel LED";
				gpios	= <&PIO0 4 0>;
				linux,default-trigger	= "heartbeat";
			};
		};

		lirc: lirc@fe518000 {
			status = "okay";
		};

		/* SSC0 to STV6440 (AV Buffer), PCIe connector (SMB) and NIM SCL1/SDA1 */
		i2c0: i2c@fed40000{
			status = "okay";
		};

		/* SSC1 to HDMI (via HDMI2C1_5DIJ) */
		i2c1: i2c@fed41000{
			status = "okay";
		};

		/* SSC10 to M24256-BWMN6 eeprom and NIM SCL2/SDA2 */
		sbc_i2c0: i2c@fe540000{
			status = "okay";
		};

		/* SSC11 to J36 TFT interface */
		sbc_i2c1: i2c@fe541000{
			status = "okay";
		};

		uart2: uart@fed32000 {
			status = "okay";
		};

		sdhci0:sdhci@fe81e000 {
			status = "okay";
		};

		sdhci1:sdhci@fe81f000 {
			//status = "okay";
		};

		ethernet0:ethernet@fe810000 {
			status = "okay";
			phy-mode	= "rgmii-id";
			snps,phy-bus-name = "stmmac";
			snps,phy-bus-id = <1>;
			snps,phy-addr = <0x1>;
			device-config = <&rgmii0_ext_clk_dev_config>;

			snps,reset-gpio = <&PIO13 6 0>;
			snps,reset-active-low;
			snps,reset-delays-us = <0 10000 10000>;

		};
		/* The GMAC1 is used to communicate with the b2112 via NIM plug.
		   It is configured in RGMII mode and it uses the dummy phy.

			To allow this a custom configuration must be provided:
			in particular, the following settings have to be done:

			1 GMAC 1 in RGMII mode
			2 CLK_S_ETH1_PHY and CLK_S_MII1_REF_OUT set to 125MHz
			3 MII_PHY_REFCLK has to be kept at 125 MHz
			  independently of the link speed.
			4 All TX/RX PIOs with new retiming RET_DE_IO(0, 0)
			  instead of RET_DE_IO(500, 0)
			5 Retiming GTXCLK to RET_NICLK(3250, 1);
			6 Set: SYSCFG_SBC508[8:6] = 0x7
			7 Set PIO4_3 OUT alternate 4
		 */
		eth_zaragoza:eth_zaragoza@fef08000 {
			status = "okay";
			phy-mode	= "rgmii";
			snps,phy-bus-name = "fixed";
			snps,phy-bus-id = <0>;
			snps,phy-addr = <0x1>;
			device-config = <&rgmii1_zaragoza_dev_config>;
		};

		snd_uni_player0: snd-uni-player@0xfe002000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
		};

		snd_uni_player1: snd-uni-player@0xfe003000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
			/* Pads clash: i2c3, snd_uni_reader1, ... */
			padcfg-names	= "default";
			padcfg-0	= <>;
		};

		snd_uni_player2: snd-uni-player@0xfe004000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
		};

		snd_uni_player3: snd-uni-player@0xfe006000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
			/* Pads clash: pwm0, ... */
			padcfg-names	= "default";
			padcfg-0	= <&padcfg_b2002_spdif_out>;
		};

		snd_uni_reader0: snd-uni-reader@0xfe005000 {
			compatible	= "st,snd_uni_reader";
			status		= "disabled";
			/* Pads clash: i2c3, snd_uni_player1, ... */
			padcfg-names	= "default";
			padcfg-0	= <&padcfg_b2011_spdif_in>;
		};

		snd_uni_reader1: snd-uni-reader@0xfe007000 {
			compatible	= "st,snd_uni_reader";
			status		= "okay";
		};

		snd_conv_dac_sc: snd-conv-dac-sc {
			compatible	= "st,snd_conv_dac_sc";
			status		= "okay";
		};

		snd_conv_biphase: snd-conv-biphase {
			compatible	= "st,snd_conv_biphase";
			status		= "okay";
		};

		snd_audio_glue: snd-audio-glue {
			compatible	= "st,snd_audio_glue";
			status		= "okay";
		};
	};
};
