/*
 * Copyright (C) 2014 STMicroelectronics Limited.
 * Author: Giuseppe Condorelli <giuseppe.condorelli@st.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * publishhed by the Free Software Foundation.
 */

/ {
	chosen {
		bootargs = "";
		linux,stdout-path = &sbc_uart0;
	};

	aliases {

		ttyAS0 = &sbc_uart0;
		i2c0 = &i2c11; /* HDMI */
		i2c1 = &i2c5; /* stv6440 / M24256-B eeprom  */
		mmc1 = &sdhci1;
		sata0 = &stm_ahci0;
		sata1 = &stm_ahci1;
	};

	soc {
		lmi-retention-gpio   = <&PIO5 2 0>;

		/* UART10 (aka SBC_UART_0) */
		sbc_uart0: uart@9530000 {
			status = "okay";
		};

		spifsm@9022000 {
			status          = "okay";
			flash-name      = "n25q256";
			partitions      = <&b2148_fsm_partitions>;
			b2148_fsm_partitions: partitions-b2148 {
				#address-cells = <1>;
				#size-cells = <1>;
				partition@0 {
					label = "Serial Flash 1";
					/* 5M */
					reg = <0x00000000 0x00500000>;
				};
				partition@500000 {
					label = "Serial Flash 2";
					/* 27M */
					reg = <0x00500000 0x1B00000>;
				};
			};
		};

		leds {
			compatible	= "gpio-leds";
			red {
				gpios	= <&PIO4 1 0>;
				linux,default-trigger	= "heartbeat";
			};
			green {
				gpios	= <&PIO1 3 0>;
				default-state = "off";
			};
		};

		lirc@09518000 {
			status = "okay";
		};

		/* SSC4 to PCIe connector */
		i2c4: i2c@9844000 {
			status = "okay";
		};

		/* SSC5 to STV6440,  PCIe connector, I2C Eeprom */
		i2c5: i2c@9845000 {
			status = "okay";
		};

		/* SSC10 to STV0368 */
		i2c10: i2c@9540000 {
			status = "okay";
		};

		/* SSC11 to HDMI */
		i2c11: i2c@9541000 {
			status = "okay";
		};

		/* MMC1 is MMC4.3 / SD2.0 HC */
		sdhci1:sdhci@09080000 {
			status = "okay";
			device-config = <&sdhci1_sd_dev_config>; // SD pad
			st,mmc-core-init = <3>; // ARASAN_SD2 core config
		};

		/*
		 * By default the board is set up to be PCI express on miphy0.
		 * The Mini PCIE connectors on miphy0 can also be used as SATA
		 * ports with the B2136 adaptor board. To change it to SATA,
		 * change the miphy mode to "sata" instead of "pcie" and change
		 * the device-seq to the SATA sequence instead of the pcie
		 * sequence. Enable the AHCI SATA controller, and disable the
		 * PCIe controller as well.
		 *
		 */
		miphy0: miphy@9b22000 {
			status = "okay";
			miphy-modes = "pcie";
			/* miphy-modes = "sata"; */
			miphy0-dev-config {
				/* Use this sequence for PCIe using the internal clock slice */
				device-seqs = <&miphy0_pcie_internal_clock_seq>;
				/* device-seqs = <&miphy0_sata_seq>; */
			};
		};

		/* PCI express controller, mini PCIe connector J4 */
		pcie0: pcie@9b00000 {
			status = "okay";
		};

		/* SATA AHCI controller using B2136 adaptor board */
		stm_ahci0: ahci@9b20000 {
			status = "disabled";
		};

		/* PCIe was removed for the miphy1 and an eSATA was connected,
		 * so enable sata as the default.
		 */
		miphy1: miphy@9b2a000 {
			status = "okay";
			miphy-modes = "sata";
			miphy1-dev-config {
				device-seqs = <&miphy1_sata_seq>;
			};
		};

		stm_ahci1: ahci@9b28000 {
			status = "okay";
		};

		/* Miphy has to be probed before USB3 controller */
		miphy2: miphy@08f90000 {
			status = "okay";
			miphy-modes     = "usb3";
		};

		/*
		   DRD USB3 controller static configuration (mode pin 11)
			o Host - sw3 off (to GND)
			o Device - sw3 on (to 3V3)
		 */
		stm_dwc3: dwc3@8f94000 {
			status = "okay";
			usb3-dev-config {
				/* DRD USB3 as host (default) */
				device-seqs = <&usb3_host_dev_seqs>;
				/* DRD USB3 as device */
				/* device-seqs = <&usb3_device_dev_seqs>; */
			};
		};

		/* SYNP GMAC is configure to be attached to the RTL on board
		   switch; so fixed_phy support is used for communicating
		   with it.
		 */
		ethernet1:ethernet@9630000 {
			status = "okay";
			phy-mode	= "rgmii";
			snps,phy-bus-name = "fixed";
			snps,phy-bus-id = <0>;
			device-config = <&rgmii1_dev_config>;
			snps,phy-addr = <0x1>;
			snps,reset-delays-us = <0 10000 10000>;
		};


		realtek: rtl8367rb {
			compatible	= "realtek,rtl8367rb";
			status		= "okay";

			gpio-reset	= <&PIO0 7 0>;
			gpio-sck	= <&PIO1 1 0>;
			gpio-sda	= <&PIO1 0 0>;

			rtl8367rb,extif1;
			rtl8367rb,extif1-mode = <1>;	// RGMII
			rtl8367rb,extif1-txdelay = <0>;
			rtl8367rb,extif1-rxdelay = <1>;
			rtl8367rb,extif1-force_mode = <1>;
			rtl8367rb,extif1-txpause = <2>;
			rtl8367rb,extif1-rxpause = <2>;
			rtl8367rb,extif1-link = <1>;
			rtl8367rb,extif1-duplex = <1>;
			rtl8367rb,extif1-speed = <2>; // Giga speed

			rtl8367rb,extif2;
			rtl8367rb,extif2-mode = <1>;	// RGMII
			rtl8367rb,extif2-txdelay = <1>;
			rtl8367rb,extif2-rxdelay = <1>;
			rtl8367rb,extif2-force_mode = <1>;
			rtl8367rb,extif2-txpause = <1>;
			rtl8367rb,extif2-rxpause = <1>;
			rtl8367rb,extif2-link = <1>;
			rtl8367rb,extif2-duplex = <1>;
			rtl8367rb,extif2-speed = <2>; // Giga speed
		};

		snd_uni_player0: snd-uni-player@0x08d80000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
		};

		snd_uni_player1: snd-uni-player@0x08d81000 {
			compatible	= "st,snd_uni_player";
			status		= "disabled";
			padcfg-names	= "default";
			padcfg-0	= <&padcfg_i2s_8ch_out>;
		};

		snd_uni_player2: snd-uni-player@0x08d82000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
		};

		snd_uni_player3: snd-uni-player@0x08d85000 {
			compatible	= "st,snd_uni_player";
			status		= "okay";
			padcfg-names	= "default";
			padcfg-0	= <&padcfg_spdif_out>;
		};

		snd_uni_reader0: snd-uni-reader@0x08d83000 {
			compatible	= "st,snd_uni_reader";
			status		= "disabled";
			padcfg-names	= "default";
			padcfg-0	= <&padcfg_i2s_8ch_in>;
		};

		snd_uni_reader1: snd-uni-reader@0x08d84000 {
			compatible	= "st,snd_uni_reader";
			status		= "okay";
		};

		snd_conv_dac_sc: snd-conv-dac-sc {
			compatible	= "st,snd_conv_dac_sc";
			status		= "okay";
		};

		snd_conv_biphase: snd-conv-biphase {
			compatible	= "st,snd_conv_biphase";
			status		= "okay";
		};

		snd_audio_glue: snd-audio-glue {
			compatible	= "st,snd_audio_glue";
			status		= "okay";
		};

		nandbch: nand-bch {
			status = "okay";
			st,rbn-flex-connected;
			st,nand-banks = <&nand_banks>;
		};

		nand_banks: nand-banks {
			bank0 {
				/* NAND_BBT_USE_FLASH (4Gbit) */
				nand-on-flash-bbt;
				nand-no-autoincr;
				st,nand-csn = <0>;
				st,nand-timing-data = <&nand_timing0>;
				partitions {
					#address-cells = <1>;
					#size-cells = <1>;
					partition@0 {
						label = "NAND Flash 1";
						reg = <0x00000000 0x1e000000>;
					};
				};
			};
		};

		nand_timing0: nand-timing {
			sig-setup = <10>;
			sig-hold = <10>;
			CE-deassert = <0>;
			WE-to-RBn = <100>;
			wr-on = <10>;
			wr-off = <30>;
			rd-on = <10>;
			rd-off = <30>;
			chip-delay = <30>; /* delay in us */
		};

	};
};
